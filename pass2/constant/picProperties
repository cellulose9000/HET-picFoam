/*--------------------------------*- C++ -*----------------------------------*\
  =========                 |
  \\      /  F ield         | OpenFOAM: The Open Source CFD Toolbox
   \\    /   O peration     | Website:  https://openfoam.org
    \\  /    A nd           | Version:  8
     \\/     M anipulation  |
\*---------------------------------------------------------------------------*/
FoamFile
{
    version     2.0;
    format      ascii;
    class       dictionary;
    location    "constant";
    object      picProperties;
}
// * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * //

//Note: One can type in an invalid model name to get a list of all defined models at runtime!

SolverSettings
{
    typeIdList                      (e Xe Xe+);//Defined species
    fieldCalculation                ();
    ChargeDistribution              CellAverage;//Model for weighting the charge to the mesh
    FieldWeigthing                  CellAverage;//Model for weighting the electric field to the parcel

    spaceCharge                     0;//[As] space charge to be uniformly distributed

    warnCellTrajectory              0.5;//Warn once every time step if a particle moves further than x of the cell length (there may even be faster particles)
}

Diagnostics
{
    modelList (Temperature);//Select these Diagnostic models
}


moleculeProperties//Properties of all species defined via SolverSettings/typeIdList
{
    e
    {
        mass                            9.109e-31;
        diameter                        5.6358e-15;
        omega                           1;//viscosity index (used only by the VariableHardSphere model)
        charge                          -1.602176e-19;
        solveMovement                   true;//Whether the parcel should move or stay stationary
        nEquivalentParticles            400;//Number of real particles included in the parcel
    }
    Xe
    {
        mass                            2.1801714e-25;
        diameter                        108e-12;
        omega                           1;//viscosity index (used only by the VariableHardSphere model)
        charge                          0;
        solveMovement                   true;//Whether the parcel should move or stay stationary
        nEquivalentParticles            400;//Number of real particles included in the parcel 
    }
    Xe+
    {
        mass                            2.18e-25;
        diameter                        190e-12;
        omega                           1;
        charge                          1.602176e-19;
        solveMovement                   true;
        nEquivalentParticles            400;
    }

    SpeciesRelations//Relations between species. Required for the collision algorithms among others
    {
        electronTypeId e;
        species1
        {
            neutralTypeId Xe;
            ionTypeId Xe+;
        }
    }
}


// BoundaryModels
// ~~~~~~~~~~~~~~~
BoundaryModels
{
    //Reflection model for boundaries of type wall (see: constant/polyMesh/boundary)
    WallReflectionModel SpecularReflection;

    //List of PatchEvent models
    PatchEventModels
    {
        modelList ();
    }

    //Boundary models have to be defined for patches
    PatchBoundaryModels
    {
        modelList(
            anode{
                type    SimpleInjection;
                SimpleInjectionCoeffs{
                    frequencies         (5.6e20);
                    injectionEndTime    1;
                    eV                  (0.1);
                    injectionTypeIds    (Xe);
                    velocityModel       maxwellianFlux;
                }
            }
            centerline{SpecularReflection;}
        );      

    }
    
}


// MaxwellSolver
MaxwellSolver                  none;

// ParticlePusher
ParticlePusher                 Boris;

// CollisionModels
CollisionModels
{
    BackgroundGasModel              none;
    BinaryCollisionModel            none;
    IonNeutralCollisionModel        none;

    ElectronNeutralCollisionModel   NanbuElectronNeutralCollision;
    ElectronNeutralCollisionCoeffs
    {
        WeightCorrection            none;//Correction model for particles of unequal weight
        CrossSectionModels
        {
            Xe
            {
                ElasticCrossSection     none;//Cross section model for elastic collisions
                ExcitationCrossSection  none;
                IonizationCrossSection  none;
                IonizationFixedValueCoeffs//options
                {
                    value 2e-20;
                    threshold 12.13;
                }
            }

        }

    }
    CoulombCollisionModel           Perez;
    CoulombCollisionCoeffs
    {
        pairingAlgorithm            NanbuYonemura;
        WeightCorrection            none;

        allowIntraCollision true;
        Collisions//Define the coulombLog for each collision (optional)
        {
            pair1
            {
                collisionPartner (e e);
                coulombLog 15;
            }
            pair2
            {
                collisionPartner (Xe+ Xe+);
                coulombLog 14.58;
            }
            pair3
            {
                collisionPartner (Xe+ e);
                coulombLog 15;
            }
        };

        //Ionization model used in coulomb collisions (here as an example)
        IonizationModel             none;//Perez
        PerezIonizationCoeffs
        {
            Xe_Coeffs
            {
                ionSpecies Xe+;
                ionizationLimit 3;
                atomicNumber    54;
                bindingEnergy                   (34561 34561 //1s
                                                 5453 5453 //2s
                                                 5107 5107 4786 4786 4786 4786 //2p
                                                 1148.7 1148.7 //3s
                                                 1002.1 1002.1 940.6 940.6 940.6 940.6 //3p
                                                 689.0 689.0 689.0 689.0 676.4 676.4 676.4 676.4 676.4 676.4 //3d
                                                 213.2 213.2 //4s
                                                 146.7 146.7 145.5 145.5 145.5 145.5 );//4p

                ionizationEnergy                 (12.1298 21.20979 32.1230);
            }
        }
    }
}

// ParticleMerging
// ~~~~~~~~~~~~~~~~~~~~~
ParticleMerging             none;

// ************************************************************************* //
